{"ast":null,"code":"// Generated by LiveScript 1.4.0\nvar max, min, negate, abs, signum, quot, rem, div, mod, recip, pi, tau, exp, sqrt, ln, pow, sin, tan, cos, asin, acos, atan, atan2, truncate, round, ceiling, floor, isItNaN, even, odd, gcd, lcm;\nmax = curry$(function (x$, y$) {\n  return x$ > y$ ? x$ : y$;\n});\nmin = curry$(function (x$, y$) {\n  return x$ < y$ ? x$ : y$;\n});\n\nnegate = function negate(x) {\n  return -x;\n};\n\nabs = Math.abs;\n\nsignum = function signum(x) {\n  if (x < 0) {\n    return -1;\n  } else if (x > 0) {\n    return 1;\n  } else {\n    return 0;\n  }\n};\n\nquot = curry$(function (x, y) {\n  return ~~(x / y);\n});\nrem = curry$(function (x$, y$) {\n  return x$ % y$;\n});\ndiv = curry$(function (x, y) {\n  return Math.floor(x / y);\n});\nmod = curry$(function (x$, y$) {\n  var ref$;\n  return (x$ % (ref$ = y$) + ref$) % ref$;\n});\n\nrecip = function recip(it) {\n  return 1 / it;\n};\n\npi = Math.PI;\ntau = pi * 2;\nexp = Math.exp;\nsqrt = Math.sqrt;\nln = Math.log;\npow = curry$(function (x$, y$) {\n  return Math.pow(x$, y$);\n});\nsin = Math.sin;\ntan = Math.tan;\ncos = Math.cos;\nasin = Math.asin;\nacos = Math.acos;\natan = Math.atan;\natan2 = curry$(function (x, y) {\n  return Math.atan2(x, y);\n});\n\ntruncate = function truncate(x) {\n  return ~~x;\n};\n\nround = Math.round;\nceiling = Math.ceil;\nfloor = Math.floor;\n\nisItNaN = function isItNaN(x) {\n  return x !== x;\n};\n\neven = function even(x) {\n  return x % 2 === 0;\n};\n\nodd = function odd(x) {\n  return x % 2 !== 0;\n};\n\ngcd = curry$(function (x, y) {\n  var z;\n  x = Math.abs(x);\n  y = Math.abs(y);\n\n  while (y !== 0) {\n    z = x % y;\n    x = y;\n    y = z;\n  }\n\n  return x;\n});\nlcm = curry$(function (x, y) {\n  return Math.abs(Math.floor(x / gcd(x, y) * y));\n});\nmodule.exports = {\n  max: max,\n  min: min,\n  negate: negate,\n  abs: abs,\n  signum: signum,\n  quot: quot,\n  rem: rem,\n  div: div,\n  mod: mod,\n  recip: recip,\n  pi: pi,\n  tau: tau,\n  exp: exp,\n  sqrt: sqrt,\n  ln: ln,\n  pow: pow,\n  sin: sin,\n  tan: tan,\n  cos: cos,\n  acos: acos,\n  asin: asin,\n  atan: atan,\n  atan2: atan2,\n  truncate: truncate,\n  round: round,\n  ceiling: ceiling,\n  floor: floor,\n  isItNaN: isItNaN,\n  even: even,\n  odd: odd,\n  gcd: gcd,\n  lcm: lcm\n};\n\nfunction curry$(f, bound) {\n  var context,\n      _curry = function _curry(args) {\n    return f.length > 1 ? function () {\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) < f.length && arguments.length ? _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n\n  return _curry();\n}","map":null,"metadata":{},"sourceType":"script"}